#!/usr/bin/env bash
# kubecm is a utitilty to manage and merge KUBECONFIG environment for IBM kubernertes service
# to use kubectx(https://github.com/ahmetb/kubectx) easily

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

usage() {
  cat <<"EOF"
USAGE:
  kubecm                       : print current KUBECONFIG 
  kubecm -r                    : reload KUBECONFIG
  kubecm -d <NAME> [<NAME...>] : delete config <NAME>

  kubecm -h,--help             : show this message
EOF
}

reload() {
  local dummy
  dummy=/tmp/kube-config-dummy-${TERM_SESSION_ID##*:}.yml

  echo "Start reload KUBECONFIG"
  if [ ! -f "${dummy}" ]; then
    cat > ${dummy} <<EOF
apiVersion: v1
clusters:
- cluster:
    server: ""
  name: dummy
contexts:
- context:
    cluster: ""
    user: ""
  name: dummy
current-context: dummy
kind: Config
preferences: {}
users:
- name: dummy
  user: {}
EOF
  fi

  export KUBECONFIG="${dummy}:$(find ~/.bluemix/plugins/container-service/clusters -path '*/*-admin/kube-config-*.yml' | tr '\n' ':')"
  echo "Finish reload KUBECONFIG"
  echo $KUBECONFIG
}

delete_configs() {
  for i in "${@}"; do
    delete_config "${i}"
  done
  reload
}

delete_config() {
  local cfg
  cfg="${1}"
  echo "Deleting config \"${cfg}\"..." >&2
  rm -ri ~/.bluemix/plugins/container-service/clusters/${cfg}-admin
}

main() {
  if [[ "$#" -eq 0 ]]; then
    echo $KUBECONFIG
  elif [[ "${1}" == "-d" ]]; then
    if [[ "$#" -lt 2 ]]; then
      echo "error: missing config NAME" >&2
      usage
      exit 1
    fi
    delete_configs "${@:2}"
  elif [[ "$#" -eq 1 ]]; then
    if [[ "${1}" == "-r" ]]; then
      reload
    elif [[ "${1}" == "-h" || "${1}" == "--help" ]]; then
      usage
      exit 1
    fi
  else
    usage
    exit 1
  fi
}

main "$@"
